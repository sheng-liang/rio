kubernetes:
  manifest: |-
    apiVersion: v1
    kind: Namespace
    metadata:
      name: ${NAMESPACE}
      annotations:
        linkerd.io/inject: disabled
      labels:
        linkerd.io/is-control-plane: "true"
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: rio-cluster-admin
    rules:
    - apiGroups:
      - ""
      resources:
      - "*"
      verbs:
      - "*"
    - nonResourceURLs:
      - "*"
      verbs:
      - '*'
    - apiGroups:
      - "extensions"
      - "apps"
      resources:
      - "deployments"
      - "daemonsets"
      verbs:
      - '*'
    - apiGroups:
      - "autoscale.rio.cattle.io"
      resources:
      - "*"
      verbs:
      - "*"
    - apiGroups:
      - "build.knative.dev"
      - "caching.internal.knative.dev"
      resources:
      - "*"
      verbs:
      - "*"
    - apiGroups:
      - "certmanager.k8s.io"
      resources:
      - "*"
      verbs:
      - "*"
    - apiGroups:
      - "networking.k8s.io"
      resources:
      - "ingresses"
      - "ingresses/status"
      verbs:
      - "*"
    - apiGroups:
      - "batch"
      resources:
      - "*"
      verbs:
      - "*"
    - apiGroups:
      - "autoscaling"
      resources:
      - "*"
      verbs:
      - "*"
    - apiGroups:
      - "rbac.authorization.k8s.io"
      resources:
      - "*"
      verbs:
      - "*"
    - apiGroups:
      - "admin.rio.cattle.io"
      resources:
      - "*"
      verbs:
      - "*"
    - apiGroups:
      - "rio.cattle.io"
      resources:
      - "*"
      verbs:
      - "*"
    - apiGroups:
      - "gitwatcher.cattle.io"
      resources:
      - "*"
      verbs:
      - "*"
    - apiGroups:
      - "apiextensions.k8s.io"
      resources:
      - "customresourcedefinitions"
      verbs:
      - "*"
    - apiGroups:
      - "authentication.istio.io"
      resources:
      - "*"
      verbs:
      - "*"
    - apiGroups:
      - "networking.istio.io"
      resources:
      - "*"
      verbs:
      - "*"
    - apiGroups:
      - "admissionregistration.k8s.io"
      resources:
      - "validatingwebhookconfigurations"
      verbs:
      - "get"
    - apiGroups:
      - "config.istio.io"
      resources:
      - "*"
      verbs:
      - "*"
    - apiGroups:
      - "rbac.istio.io"
      resources:
      - "*"
      verbs:
      - "get"
      - "watch"
      - "list"
    - apiGroups:
      - "autoscaling.internal.knative.dev"
      resources:
      - "*"
      verbs:
      - "*"
    - apiGroups:
      - serving.knative.dev
      - autoscaling.internal.knative.dev
      - networking.internal.knative.dev
      resources:
      - '*'
      - '*/status'
      - '*/finalizers'
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - deletecollection
      - patch
      - watch
    - apiGroups:
      - tekton.dev
      resources:
      - tasks
      - clustertasks
      - taskruns
      - pipelines
      - pipelineruns
      - pipelineresources
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
    - apiGroups:
      - tekton.dev
      resources:
      - taskruns/finalizers
      - pipelineruns/finalizers
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
    - apiGroups:
      - tekton.dev
      resources:
      - tasks/status
      - clustertasks/status
      - taskruns/status
      - pipelines/status
      - pipelineruns/status
      - pipelineresources/status
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
    - apiGroups:
      - policy
      resourceNames:
      - tekton-pipelines
      resources:
      - podsecuritypolicies
      verbs:
      - use
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: rio-controller-binding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: rio-cluster-admin
    subjects:
    - kind: ServiceAccount
      name: rio-controller-serviceaccount
      namespace: ${NAMESPACE}
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: rio-controller-serviceaccount
      namespace: ${NAMESPACE}
    ---
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: rio-controller
      namespace: ${NAMESPACE}
    spec:
      selector:
        matchLabels:
          rio-controller: "true"
      template:
        metadata:
          labels:
            rio-controller: "true"
        spec:
          serviceAccountName: rio-controller-serviceaccount
          containers:
          - image: ${IMAGE}
            imagePullPolicy: Always
            name: rio-controller
            args:
            - rio-controller
            env:
            - name: RIO_NAMESPACE
              value: ${NAMESPACE}
            - name: RIO_DEBUG
              value: ${RIO_DEBUG}
            - name: HTTPS_PORT
              value: "${HTTPS_PORT}"
            - name: HTTP_PORT
              value: "${HTTP_PORT}"
            - name: IP_ADDRESSES
              value: ${IP_ADDRESSES}
            - name: SERVICE_CIDR
              value: ${SERVICE_CIDR}
            - name: DISABLE_FEATURES
              value: ${DISABLE_FEATURES}
            - name: HTTP_PROXY
              value: ${HTTP_PROXY}
            - name: INSTALL_MODE
              value: ${INSTALL_MODE}

templates:
  questions:
  - variable: IMAGE
    description: "rio-controller image"
  - variable: NAMESPACE
    description: "namespace to deploy to"
  - variable: RIO_DEBUG
    description: "set to true to enable debug logging"
  - variable: HTTPS_PORT
    description: "https port gateway will listen to"
  - variable: HTTP_PORT
    description: "http port gateway will listen to"
  - variable: IP_ADDRESSES
    description: "whether to manually specify ip addresses to generate"
  - variable: SERVICE_CIDR
    description: "manually specify service CIDR for service mesh to intercept"
  - variable: DISABLE_FEATURES
    description: "manually specify features to disable"
  - variable: HTTP_PROXY
    description: "specify http proxy setting"
  - variable: INSTALL_MODE
    description: "install mode"